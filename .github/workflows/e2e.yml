name: e2e
on: push
jobs:
  build-local-cryptid:
    name: Build cypress cryptid frontend on Node ${{ matrix.node }} and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ["16.x"]
        os: [ubuntu-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: NVM Install
        run: nvm install

      - name: Install
        run: yarn

      - name: Cargo build
        run: cargo build-bpf

      - name: Set environment for branch
        run: |
          echo "CIVIC_ENV=DEV" >> "$GITHUB_ENV"

      - name: Build cryptid
        run: yarn workspace @identity.com/cryptid build

      - name: Start validator
        run: yarn start-validator

  start-cryptid:
    needs: build-local-cryptid
    name: Start cryptid
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['16.x']
        os: [ubuntu-latest]

    steps:
      - name: Start cryptid
        run: yarn workspace @identity.com/cryptid-wallet start

  run-cypress-tests:
    needs: start-cryptid
    name: Run cypress cryptid tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['16.x']
        os: [ubuntu-latest]

    steps:
      - name: Cypress
        run: yarn cypress run
        working-directory: ./e2e

    env:
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
