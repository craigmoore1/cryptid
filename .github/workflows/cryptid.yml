name: Cryptid
on:
  push:
    branches:
      - anchor_rewrite
      - feature/IDCOM-2080__CI
  pull_request:

env:
  solana_version: stable

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        name: cache solana cli
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.solana_version }}

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache rust
        uses: Swatinem/rust-cache@v1

      - name: install essentials
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev

      - name: install solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/${{ env.solana_version }}/install)"
          export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
          solana --version

  lint-program:
    needs: install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache rust
        uses: Swatinem/rust-cache@v1
      - name: Run fmt
        run: cargo fmt -- --check
      - name: Run clippy
        run: cargo clippy -- --deny=warnings

  lint-client:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Cache node dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: install node_modules
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          yarn --frozen-lockfile
      - name: Run lint
        run: yarn lint

  test:
    needs: [lint-client, lint-program]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Cache node dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: install node_modules
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          yarn --frozen-lockfile

      - uses: actions/cache@v2
        name: cache solana cli
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.solana_version }}

      - name: setup solana
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
          solana-keygen new --silent --no-bip39-passphrase

      - name: run tests
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          yarn test

  program-dev-deploy:
    name: Deploy dev cryptid on-chain program, built on Solana ${{ matrix.solana }}, Rust ${{ matrix.rust }}, and ${{ matrix.os }}
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    needs: [test]
    env:
      SOLANA_PROGRAM_ID: cry484buH1TnYCcegsogRzJ1tbhjeDLZC7vjRvHzaku
      SOLANA_AUTHORITY: ${{ secrets.SOLANA_DEV_AUTHORITY }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: ['1.63']
        solana: ['stable']
        os: [ubuntu-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache build dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target
          key: cargo-build-${{ hashFiles('Cargo.lock') }}

      - name: Cache Solana version
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ matrix.solana }}

      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/${{ matrix.solana }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Build programs
        uses: actions-rs/cargo@v1
        with:
          command: build-bpf

      - name: Deploy dev program
        run: |
          echo "$SOLANA_AUTHORITY" > ~/.config/solana/id.json
          solana config set --url devnet
          solana program deploy target/deploy/cryptid_signer.so --program-id $SOLANA_PROGRAM_ID
          solana program show $SOLANA_PROGRAM_ID
